name: Build and release
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  luacheck:
    name: Check code style (Lua)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install additional packages
        run: |
          set -e
          sudo apt -qy update
          sudo apt -qy install --no-install-recommends lua-check
      - name: Run luacheck
        run: |
          find -type f -follow -name '*.lua' -not -name 'build.lua' -exec luacheck {} +
  explcheck:
    name: Check code style (expl3)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: |
            luatex
      - name: Run explcheck
        run: |
          set -e
          export LUAINPUTS=explcheck/src
          find */support -type f '(' -name '*.tex' -o -name '*.sty' ')' -exec \
            texlua explcheck/src/explcheck.lua --warnings-are-errors {} +
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: |
            l3build
      - name: Run tests
        run: |
          l3build check
  ctan:
    name: Build a CTAN archive
    needs: [luacheck, explcheck, tests]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install additional packages
        run: |
          set -e
          sudo apt -qy update
          sudo apt -qy install --no-install-recommends parallel
      - name: Install TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: |
            scheme-basic
            l3build
          package-file: |
            **/DEPENDS.txt
      - name: Build a CTAN archive
        run: |
          l3build ctan
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: CTAN archive
          path: |
            build/distrib/ctan/expltools-ctan.zip
      - name: Create a prerelease
        if: github.ref == 'refs/heads/main'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: The latest version
          automatic_release_tag: latest
          prerelease: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            build/doc/*.pdf
            build/distrib/ctan/expltools-ctan.zip
